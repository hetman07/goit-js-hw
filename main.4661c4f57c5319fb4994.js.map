{"version":3,"sources":["webpack:///./apiPixabay.js","webpack:///./spinner.js","webpack:///./modal.js","webpack:///./index.js","webpack:///./template/galleryPixabay.hbs","webpack:///./scroll.js"],"names":["per_page","key","query","fetchUrl","this","spinner","document","querySelector","classList","remove","add","onclick","e","imgItem","target","nodeName","basicLightbox","show","imgLightBox","getSrcAttribut","dataset","source","setAttribute","refs","galleryContainer","searchForm","msnry","Masonry","itemSelector","columnWidth","gutter","percentPosition","stagger","transitionDuration","visibleStyle","transform","opacity","hiddenStyle","infScrollInstance","InfiniteScroll","responseType","history","outlayer","path","apiPixabay","pageIndex","on","response","url","JSON","parse","images","arrayHits","hits","length","error","title","text","hide","delay","markup","map","image","galleryTemplate","join","proxyEl","createElement","innerHTML","parsedItems","querySelectorAll","imagesLoaded","appendItems","appended","loadNextPage","addEventListener","preventDefault","inputValue","currentTarget","elements","value","galleryItems","option","forEach","item","layout","Handlebars","module","exports","template","container","depth0","helpers","partials","data","helper","alias1","nullContext","alias2","hooks","helperMissing","alias3","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","event","window","scrollTo","top","behavior"],"mappings":"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","file":"main.4661c4f57c5319fb4994.js","sourcesContent":["const baseUrl = 'https://cors-anywhere.herokuapp.com/https://pixabay.com/api/';\r\n\r\n//формирование адресной строки для запроса на API сервер PixaBay\r\n\r\nexport default {\r\n  per_page: 12,\r\n  key: '16866490-95e5a3597ee6f5bb528b18ee9',\r\n  query: '',\r\n  fetchUrl() {\r\n    const requestParams = `?key=${this.key}&q=${this.query}&per_page=${this.per_page}&page=`;\r\n    return (baseUrl + requestParams);\r\n  }\r\n};\r\n","const spinner = document.querySelector('#spinner');\r\n\r\nexport default {\r\n  show() {\r\n    spinner.classList.remove('is-hidden'); //удаляем класс со стилем который отображает спинер\r\n  },\r\n  hidden() {\r\n    spinner.classList.add('is-hidden');\r\n  }\r\n}\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport 'basiclightbox/dist/basicLightbox.min.css';\r\n\r\n//плагин модального окна basicLightbox\r\n\r\nconst galleryContainer = document.querySelector('.js-gallery'); //ul для вставки li\r\n\r\ngalleryContainer.onclick = (e) => {\r\n  let imgItem = e.target; //выдает конкретный тэг IMG в основной галерее\r\n  //проверка что клик произошел на теге IMG\r\n  if (e.target.nodeName !== 'IMG') {\r\n    return;\r\n  };\r\n  //создаю шаблон для модального окна\r\n  const html = `\r\n    <div id=\"image\">\r\n    <img class=\"lightbox-img\" width=\"1400\" src=\"\" />\r\n  </div>\r\n  `\r\n\r\n  const instance = basicLightbox.create(html);\r\n  instance.show(() => {\r\n\r\n    const imgLightBox = document.querySelector('.lightbox-img');\r\n    const getSrcAttribut = imgItem.dataset.source; //из этого конкретного тэга IMG вытягиваю его атрибут source\r\n\r\n    //Подмена значения атрибута src элемента img.lightbox-img\r\n    //даю атрибут src адреса картинки\r\n    imgLightBox.setAttribute(\"src\", getSrcAttribut);\r\n\r\n  });\r\n};\r\n","//ИМПОРТ\nimport Masonry from 'masonry-layout';\nimport InfiniteScroll from 'infinite-scroll'; // подкл. инфинити скролл\nimport imagesLoaded from 'imagesloaded';\nimport {\n  alert,\n  notice,\n  info,\n  success,\n  error\n} from '@pnotify/core';\n// import * as basicLightbox from 'basiclightbox';\n\n//JS\nimport apiPixabay from './apiPixabay.js'; //импортирую файл который формируют адресную строку для запроса\nimport './scroll.js'; //подк скролл для прокрутки экрана вверх\nimport spinner from './spinner.js'; //для отображения слоя со спинером\nimport './modal.js';\n\n//ШАБЛОН\nimport galleryTemplate from './template/galleryPixabay.hbs'; //подкл. шаблон для вставки\n\n// CSS\nimport 'material-design-icons/iconfont/material-icons.css'; //отображение иконок\n\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/core/dist/Material.css';\nimport '@pnotify/core/dist/PNotify.css';\n// import 'basiclightbox/dist/basicLightbox.min.css';\nimport './styles.css';\n\n//ссылки на DOM-узлы\nconst refs = {\n  galleryContainer: document.querySelector('.js-gallery'), //ul для вставки li\n  searchForm: document.querySelector('#search-form'), // форма\n};\n\n//используем плагин Masonry созд экземпляр\nconst msnry = new Masonry('.grid', {\n  itemSelector: '.photo-item',\n  columnWidth: '.grid__col-sizer',\n  gutter: '.grid__gutter-sizer',\n  percentPosition: true,\n  stagger: 30,\n  transitionDuration: '0.3s',\n  // nicer reveal transition\n  visibleStyle: {\n    transform: 'translateY(0)',\n    opacity: 1,\n  },\n  hiddenStyle: {\n    transform: 'translateY(100px)',\n    opacity: 0,\n  },\n});\n//для исп инфинити скролла созд с помощью конструктора необх 2 параметра\nconst infScrollInstance = new InfiniteScroll(refs.galleryContainer, {\n  //1й пар-р - контейнер куда  будем рендерить\n  responseType: 'text', //2-й параметр options {}\n  history: false,\n  outlayer: msnry, //исп Масонри\n  path() {\n    return apiPixabay.fetchUrl() + `${this.pageIndex}`;\n  },\n});\n\ninfScrollInstance.on('load', async (response, url) => {\n  //слушатель инфинитискролла\n  //response строка с данными с бэкенда\n\n  spinner.show(); //даем класс is-hidden пока делаем запрос на бекэнд\n\n  const images = await JSON.parse(response); //трансформируем ее в обьект с данными\n  const arrayHits = images.hits; //массив из обьектов с картинками и данными\n\n  if (arrayHits.length === 0) {\n    //pnotify сообщение если введен не коректный запрос в поиск\n    error({\n      title: 'Uh Oh!',\n      text: 'Not find pictures, please try again!',\n      hide: true,\n      delay: 2000,\n    });\n  }\n\n  const markup = arrayHits.map(image => galleryTemplate(image)).join(''); //создаем разметку по шаблону\n\n  const proxyEl = document.createElement('div');\n\n  proxyEl.innerHTML = markup; // convert HTML string into elements\n\n  const parsedItems = proxyEl.querySelectorAll('.js-gallery__item'); //перерисовываем в определенном месте наш DOM согласно свормированной разметкой\n\n  imagesLoaded(parsedItems, () => { //с помощью плагина imagesLoaded что бы не было наложения картинок вставляем полученые данные с бэкенда\n    infScrollInstance.appendItems(parsedItems); //с помощью встроеного  в инфинитескролл метода appendItems добавляем в ДОМ\n    //Добавляем элементы в контейнер\n    msnry.appended(parsedItems); //Добавляет и размещает добавленные элементы элемента в конце макета.\n    spinner.hidden(); //прячем спиннер\n  });\n});\n\ninfScrollInstance.loadNextPage(); //с помощью встроеного метода loadNextPage в инфинитескролле дозагружаем следующую страницу\n\n// Сабмит формы с новым параметром запроса для картинок\nrefs.searchForm.addEventListener('submit', e => {\n  e.preventDefault(); //остановка отправки формы\n\n  const form = e.currentTarget;\n  const input = form.elements.query;\n  const inputValue = input.value; //значения которые вводяться в поле инпута\n  apiPixabay.query = inputValue; //подставляем введеные данные в значение ключа query для генерации путя\n\n  const galleryItems = document.querySelectorAll('.js-gallery__item');\n\n  infScrollInstance.pageIndex = 1; //сброс пар-ра pageIndex в 1 для рендеринга нового запроса\n  if (inputValue !== '') {\n    infScrollInstance.option({\n      path() {\n        return apiPixabay.fetchUrl() + `${this.pageIndex}`;\n      },\n    });\n\n    imagesLoaded(galleryItems, () => {\n      return galleryItems.forEach(item => {\n        msnry.remove(item); //очистка экрана от старых запросов\n        msnry.layout(msnry); //запуск построения новой разметки по новому поиску\n      });\n    });\n\n    infScrollInstance.loadNextPage();\n  }\n});\n\n// //плагин модального окна basicLightbox\n\n// refs.galleryContainer.onclick = (e) => {\n//   let imgItem = e.target; //выдает конкретный тэг IMG в основной галерее\n//   //проверка что клик произошел на теге IMG\n//   if (e.target.nodeName !== 'IMG') {\n//     return;\n//   };\n\n//   //создаю шаблон для модального окна\n//   const html = `\n//   <div id=\"image\">\n//   <img class=\"lightbox-img\" width=\"1400\" src=\"\" />\n// </div>\n// `\n\n//   const instance = basicLightbox.create(html, {\n//     onShow: (instance) => console.log('onShow', instance),\n//     onClose: (instance) => console.log('onClose', instance)\n//   });\n//   instance.show(() => {\n//     const imgLightBox = document.querySelector('.lightbox-img');\n//     const getSrcAttribut = imgItem.dataset.source; //из этого конкретного тэга IMG вытягиваю его атрибут source\n\n//     //Подмена значения атрибута src элемента img.lightbox__img\n//     //даю атрибут src адреса картинки\n//     imgLightBox.setAttribute(\"src\", getSrcAttribut);\n//   });\n// };\n","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.hooks.helperMissing, alias3=\"function\", alias4=container.escapeExpression, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<li class=\\\"photo-item js-gallery__item\\\">\\r\\n    <div class=\\\"photo-card\\\">\\r\\n        <img class=\\\"photo-item__image\\\" src=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"webformatURL\") || (depth0 != null ? lookupProperty(depth0,\"webformatURL\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"webformatURL\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":44},\"end\":{\"line\":3,\"column\":60}}}) : helper)))\n    + \"\\\" data-source=\\\"\"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"largeImageURL\") || (depth0 != null ? lookupProperty(depth0,\"largeImageURL\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"largeImageURL\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":3,\"column\":75},\"end\":{\"line\":3,\"column\":92}}}) : helper)))\n    + \"\\\" alt=\\\"\\\" />\\r\\n        <div class=\\\"stats\\\">\\r\\n            <p class=\\\"stats-item\\\">\\r\\n                <i class=\\\"material-icons\\\">thumb_up</i>\\r\\n                \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"likes\") || (depth0 != null ? lookupProperty(depth0,\"likes\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"likes\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":7,\"column\":16},\"end\":{\"line\":7,\"column\":25}}}) : helper)))\n    + \"\\r\\n            </p>\\r\\n            <p class=\\\"stats-item\\\">\\r\\n                <i class=\\\"material-icons\\\">visibility</i>\\r\\n                \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"views\") || (depth0 != null ? lookupProperty(depth0,\"views\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"views\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":11,\"column\":16},\"end\":{\"line\":11,\"column\":25}}}) : helper)))\n    + \"\\r\\n            </p>\\r\\n            <p class=\\\"stats-item\\\">\\r\\n                <i class=\\\"material-icons\\\">comment</i>\\r\\n                \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"comments\") || (depth0 != null ? lookupProperty(depth0,\"comments\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"comments\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":15,\"column\":16},\"end\":{\"line\":15,\"column\":28}}}) : helper)))\n    + \"\\r\\n            </p>\\r\\n            <p class=\\\"stats-item\\\">\\r\\n                <i class=\\\"material-icons\\\">cloud_download</i>\\r\\n                \"\n    + alias4(((helper = (helper = lookupProperty(helpers,\"downloads\") || (depth0 != null ? lookupProperty(depth0,\"downloads\") : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{\"name\":\"downloads\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":19,\"column\":16},\"end\":{\"line\":19,\"column\":29}}}) : helper)))\n    + \"\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</li>\";\n},\"useData\":true});","const btnScroll = document.querySelector('.scroll');\r\n\r\nbtnScroll.addEventListener('click', handleClickBtn);\r\n\r\nfunction handleClickBtn(event) {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n  return false;\r\n}\r\n"],"sourceRoot":""}